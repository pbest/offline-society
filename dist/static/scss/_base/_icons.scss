/*
//=====
name: "Icon Font";
slug: base/icons
description: [
  Icon font
];
=====//
 */

 // If you are using ripe's gulp-starter:
 // -------
 // DO NOT EDIT DIRECTLY! Generated by 'gulp/tasks/iconFont.js'
 // Check the 'config.yml' file for the location of the template scss file.

@font-face {
  font-family: "offline-society";
  src: url('../fonts/offline-society.eot');
  src: url('../fonts/offline-society.eot?#iefix') format('eot'),
    url('../fonts/offline-society.woff') format('woff'),
    url('../fonts/offline-society.ttf') format('truetype'),
    url('../fonts/offline-society.svg#offline-society') format('svg');
}

@mixin icon-styles {
  font-family: "offline-society";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
}

%icon {
  @include icon-styles;
}

@function icon-char($filename) {
  $char: "";

  @if $filename == arrow-down {
    $char: "\E001";
  }
  @if $filename == arrow-left {
    $char: "\E002";
  }
  @if $filename == check {
    $char: "\E003";
  }
  @if $filename == close-circle {
    $char: "\E004";
  }
  @if $filename == close {
    $char: "\E005";
  }
  @if $filename == hamburger {
    $char: "\E006";
  }
  @if $filename == navigate-down {
    $char: "\E007";
  }

  @return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
  &:#{$insert} {
    @if $extend {
      @extend %icon;
    } @else {
      @include icon-styles;
    }
    content: icon-char($filename);
  }
}

.icon--arrow-down {
  @include icon(arrow-down);
}
.icon--arrow-left {
  @include icon(arrow-left);
}
.icon--check {
  @include icon(check);
}
.icon--close-circle {
  @include icon(close-circle);
}
.icon--close {
  @include icon(close);
}
.icon--hamburger {
  @include icon(hamburger);
}
.icon--navigate-down {
  @include icon(navigate-down);
}
